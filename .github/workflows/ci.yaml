name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.1.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv,venv,*/virtualenvs/*

    - name: Type check with mypy
      run: |
        make mypy

    - name: Test with pytest
      run: |
        poetry run pytest --cov=./ --cov-report=xml

  # This job builds and tests the Docker image
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t ai-github-action .

    - name: Test Docker image
      run: |
        docker run --rm ai-github-action --help || true

  # This job runs the AI PR Review on itself
  ai-pr-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test, docker]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Self-review
      uses: ./
      with:
        action-type: pr-review
        openai-api-key: ${{ secrets.OPENAI_API_KEY }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        model: gpt-4o-mini
      env:
        LOG_LEVEL: INFO
