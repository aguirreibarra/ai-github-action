name: Dogfooding - AI Actions on Our Own Repos

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Mondays

jobs:
  scan-ai-agents:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Clone AI Agents repo
      run: |
        git clone https://github.com/aguirreibarra/ai-agents.git
        cd ai-agents
      
    - name: AI Code Scan
      uses: ./
      with:
        action-type: code-scan
        openai-api-key: ${{ secrets.OPENAI_API_KEY }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        max-files: 15
        include-patterns: "*.py,*.md"
        
    - name: Create issue with findings
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const summary = process.env.SUMMARY || "No summary available";
          const details = process.env.DETAILS || "No details available";
          const suggestions = process.env.SUGGESTIONS || "No suggestions available";
          
          const body = `# Weekly AI Code Scan Results
          
          ## Summary
          ${summary}
          
          ## Details
          ${details}
          
          ## Suggestions
          ${suggestions}
          
          ---
          *This issue was automatically generated by the AI GitHub Action*`;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: 'ai-agents',
            title: 'Weekly AI Code Scan Results',
            body: body,
            labels: ['ai-generated', 'code-scan']
          });
      env:
        SUMMARY: ${{ steps.scan.outputs.summary }}
        DETAILS: ${{ steps.scan.outputs.details }}
        SUGGESTIONS: ${{ steps.scan.outputs.suggestions }}
  
  review-recent-prs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Find recent PRs
      id: find_prs
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prs = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: 'ai-agents',
            state: 'closed',
            sort: 'updated',
            direction: 'desc',
            per_page: 3
          });
          
          return {
            pr_numbers: prs.data.map(pr => pr.number)
          };
    
    - name: AI PR Review
      uses: ./
      with:
        action-type: pr-review
        openai-api-key: ${{ secrets.OPENAI_API_KEY }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        pr_number: ${{ fromJson(steps.find_prs.outputs.result).pr_numbers[0] }}
        max-files: 10
      
    - name: Summarize Findings
      run: |
        echo "## AI PR Review Findings" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.review.outputs.summary }}" >> $GITHUB_STEP_SUMMARY