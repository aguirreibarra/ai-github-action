# Example workflow for AI code scanning

name: AI Code Scan

on:
  schedule:
    - cron: '0 0 * * 1'  # Run weekly on Mondays
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [main]
    paths:
      - '**.py'
      - '**.js'
      - '**.ts'
      - '**.jsx'
      - '**.tsx'
      - '**.java'

jobs:
  scan:
    runs-on: arc-runner-set
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: AI Code Scan
        id: scan
        uses: aguirreibarra/ai-github-action@main
        with:
          action-type: code-scan
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          max-files: 20
          include-patterns: "src/**/*.py,src/**/*.js,lib/**/*.ts"
          exclude-patterns: "**/__tests__/**,**/test/**,**/dist/**,**/node_modules/**"
          
      - name: Create issue if issues found
        if: steps.scan.outputs.details != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = process.env.SUMMARY || "No issues found";
            const details = process.env.DETAILS || "No details available";
            const suggestions = process.env.SUGGESTIONS || "No suggestions available";
            
            // Check if this contains actual issues and not just an all-clear report
            const hasIssues = details.toLowerCase().includes('vulnerability') || 
                              details.toLowerCase().includes('issue') ||
                              details.toLowerCase().includes('problem') ||
                              details.toLowerCase().includes('concern');
            
            if (hasIssues) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'AI Code Scan Results: Potential Issues Found',
                body: [
                  '# AI Code Scan Results',
                  '',
                  '## Summary',
                  summary,
                  '',
                  '## Details',
                  details,
                  '',
                  '## Suggestions',
                  suggestions,
                  '',
                  '---',
                  `*Generated by AI Code Scan on ${new Date().toISOString().split('T')[0]}*`
                ].join('\n'),
                labels: ['ai-scan', 'security']
              });
              
              console.log('Issue created with scan results');
            } else {
              console.log('No significant issues found, skipping issue creation');
            }
        env:
          SUMMARY: ${{ steps.scan.outputs.summary }}
          DETAILS: ${{ steps.scan.outputs.details }}
          SUGGESTIONS: ${{ steps.scan.outputs.suggestions }}